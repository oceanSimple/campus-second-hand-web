// Code generated by goctl. DO NOT EDIT.
// Source: myRedis.proto

package server

import (
	"context"

	"server-v1/service/redis/internal/logic/shoppingcartservice"
	"server-v1/service/redis/internal/svc"
	"server-v1/service/redis/pb/redisService"
)

type ShoppingCartServiceServer struct {
	svcCtx *svc.ServiceContext
	redisService.UnimplementedShoppingCartServiceServer
}

func NewShoppingCartServiceServer(svcCtx *svc.ServiceContext) *ShoppingCartServiceServer {
	return &ShoppingCartServiceServer{
		svcCtx: svcCtx,
	}
}

func (s *ShoppingCartServiceServer) GetItems(ctx context.Context, in *redisService.IdRequest) (*redisService.ItemsResponse, error) {
	l := shoppingcartservicelogic.NewGetItemsLogic(ctx, s.svcCtx)
	return l.GetItems(in)
}

func (s *ShoppingCartServiceServer) AddItem(ctx context.Context, in *redisService.AddItemRequest) (*redisService.ResultResponse, error) {
	l := shoppingcartservicelogic.NewAddItemLogic(ctx, s.svcCtx)
	return l.AddItem(in)
}

func (s *ShoppingCartServiceServer) UpdateItem(ctx context.Context, in *redisService.AddItemRequest) (*redisService.ResultResponse, error) {
	l := shoppingcartservicelogic.NewUpdateItemLogic(ctx, s.svcCtx)
	return l.UpdateItem(in)
}

func (s *ShoppingCartServiceServer) RemoveItem(ctx context.Context, in *redisService.RemoveItemRequest) (*redisService.ResultResponse, error) {
	l := shoppingcartservicelogic.NewRemoveItemLogic(ctx, s.svcCtx)
	return l.RemoveItem(in)
}

func (s *ShoppingCartServiceServer) RemoveItems(ctx context.Context, in *redisService.RemoveItemsRequest) (*redisService.ResultResponse, error) {
	l := shoppingcartservicelogic.NewRemoveItemsLogic(ctx, s.svcCtx)
	return l.RemoveItems(in)
}
