// Code generated by goctl. DO NOT EDIT.
// Source: account.proto

package server

import (
	"context"

	"server-v1/service/account/internal/logic"
	"server-v1/service/account/internal/svc"
	"server-v1/service/account/pb/accountDbService"
)

type AccountServiceServer struct {
	svcCtx *svc.ServiceContext
	accountDbService.UnimplementedAccountServiceServer
}

func NewAccountServiceServer(svcCtx *svc.ServiceContext) *AccountServiceServer {
	return &AccountServiceServer{
		svcCtx: svcCtx,
	}
}

// 根据id获取账户信息
func (s *AccountServiceServer) GetAccountById(ctx context.Context, in *accountDbService.GetByIdRequest) (*accountDbService.Account, error) {
	l := logic.NewGetAccountByIdLogic(ctx, s.svcCtx)
	return l.GetAccountById(in)
}

// 根据账号获取账户信息
func (s *AccountServiceServer) GetAccountByAccount(ctx context.Context, in *accountDbService.GetByAccountRequest) (*accountDbService.Account, error) {
	l := logic.NewGetAccountByAccountLogic(ctx, s.svcCtx)
	return l.GetAccountByAccount(in)
}

// 创建账户
func (s *AccountServiceServer) CreateAccount(ctx context.Context, in *accountDbService.Account) (*accountDbService.BoolResp, error) {
	l := logic.NewCreateAccountLogic(ctx, s.svcCtx)
	return l.CreateAccount(in)
}

// 更新string类型字段
func (s *AccountServiceServer) UpdateAccountString(ctx context.Context, in *accountDbService.UpdateStringRequest) (*accountDbService.BoolResp, error) {
	l := logic.NewUpdateAccountStringLogic(ctx, s.svcCtx)
	return l.UpdateAccountString(in)
}

// 更新int类型字段
func (s *AccountServiceServer) UpdateAccountInt(ctx context.Context, in *accountDbService.UpdateIntRequest) (*accountDbService.BoolResp, error) {
	l := logic.NewUpdateAccountIntLogic(ctx, s.svcCtx)
	return l.UpdateAccountInt(in)
}

// 删除账户
func (s *AccountServiceServer) DeleteAccountById(ctx context.Context, in *accountDbService.GetByIdRequest) (*accountDbService.BoolResp, error) {
	l := logic.NewDeleteAccountByIdLogic(ctx, s.svcCtx)
	return l.DeleteAccountById(in)
}
