// Code generated by goctl. DO NOT EDIT.
// Source: account.proto

package accountservice

import (
	"context"

	"server-v1/service/account/pb/accountDbService"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	Account             = accountDbService.Account
	BoolResp            = accountDbService.BoolResp
	GetByIdRequest      = accountDbService.GetByIdRequest
	UpdateIntRequest    = accountDbService.UpdateIntRequest
	UpdateStringRequest = accountDbService.UpdateStringRequest

	AccountService interface {
		// 根据id获取账户信息
		GetAccountById(ctx context.Context, in *GetByIdRequest, opts ...grpc.CallOption) (*Account, error)
		// 创建账户
		CreateAccount(ctx context.Context, in *Account, opts ...grpc.CallOption) (*BoolResp, error)
		// 更新string类型字段
		UpdateAccountString(ctx context.Context, in *UpdateStringRequest, opts ...grpc.CallOption) (*BoolResp, error)
		// 更新int类型字段
		UpdateAccountInt(ctx context.Context, in *UpdateIntRequest, opts ...grpc.CallOption) (*BoolResp, error)
		// 删除账户
		DeleteAccountById(ctx context.Context, in *GetByIdRequest, opts ...grpc.CallOption) (*BoolResp, error)
	}

	defaultAccountService struct {
		cli zrpc.Client
	}
)

func NewAccountService(cli zrpc.Client) AccountService {
	return &defaultAccountService{
		cli: cli,
	}
}

// 根据id获取账户信息
func (m *defaultAccountService) GetAccountById(ctx context.Context, in *GetByIdRequest, opts ...grpc.CallOption) (*Account, error) {
	client := accountDbService.NewAccountServiceClient(m.cli.Conn())
	return client.GetAccountById(ctx, in, opts...)
}

// 创建账户
func (m *defaultAccountService) CreateAccount(ctx context.Context, in *Account, opts ...grpc.CallOption) (*BoolResp, error) {
	client := accountDbService.NewAccountServiceClient(m.cli.Conn())
	return client.CreateAccount(ctx, in, opts...)
}

// 更新string类型字段
func (m *defaultAccountService) UpdateAccountString(ctx context.Context, in *UpdateStringRequest, opts ...grpc.CallOption) (*BoolResp, error) {
	client := accountDbService.NewAccountServiceClient(m.cli.Conn())
	return client.UpdateAccountString(ctx, in, opts...)
}

// 更新int类型字段
func (m *defaultAccountService) UpdateAccountInt(ctx context.Context, in *UpdateIntRequest, opts ...grpc.CallOption) (*BoolResp, error) {
	client := accountDbService.NewAccountServiceClient(m.cli.Conn())
	return client.UpdateAccountInt(ctx, in, opts...)
}

// 删除账户
func (m *defaultAccountService) DeleteAccountById(ctx context.Context, in *GetByIdRequest, opts ...grpc.CallOption) (*BoolResp, error) {
	client := accountDbService.NewAccountServiceClient(m.cli.Conn())
	return client.DeleteAccountById(ctx, in, opts...)
}
